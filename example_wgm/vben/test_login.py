# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from seleniumbase import BaseCase
from user_operation import UserOperation
BaseCase.main(__name__, __file__)

class TestLogin(BaseCase):
  # def setup_method(self, method):
  #   self.driver = webdriver.Chrome()
  #   self.vars = {}
  
  # def teardown_method(self, method):
  #   self.driver.quit()
  # def login(self,account = 'vben',password = '123456'):
  #   self.driver.get("http://localhost:5173/")
  #   self.driver.set_window_size(1536, 816)
  #   self.wait_for_element("form_item_account",By.ID,2)
  #   # self.driver.find_element(By.ID, "form_item_account").click()
  #   # self.driver.find_element(By.ID, "form_item_account").send_keys(" ")
  #   # self.driver.find_element(By.ID, "form_item_account").send_keys("vben")
  #   self.type("#form_item_account",account)
  #   self.type("#form_item_password",password)
  #   # self.driver.find_element(By.ID, "form_item_password").click()
  #   # self.driver.find_element(By.ID, "form_item_password").send_keys(" ")
  #   # self.driver.find_element(By.ID, "form_item_password").send_keys("123456")
  #   self.driver.find_element(By.CSS_SELECTOR, ".ant-btn-primary > span").click()

  def test_login(self):
    op = UserOperation(self)
    op.login()
    #close info tag
    self.wait_for_element(".anticon-close > svg",By.CSS_SELECTOR,2)
    self.driver.find_element(By.CSS_SELECTOR, ".anticon-close > svg").click()

  @pytest.mark.expected_failure
  def test_login_error_pass(self):
    op = UserOperation(self)
    op.login('vben','111111')
    self.sleep(2)
    # self.assert_text('Incorrect account or password')
    # self.assert_element_visible('.ant-modal-confirm-content',By.CSS_SELECTOR,3)
    # 这里卡住了
    self.assert_element_not_visible(".modal-icon-error",timeout=0.4)

  def test_login_error_no_account(self):
    op = UserOperation(self)
    op.login('','111111')
    self.assert_text('请输入账号',timeout=0.4)

  @pytest.mark.expected_failure
  def test_login_error_no_password(self):
    op = UserOperation(self)
    op.login('vben','')
    self.assert_text('请输入密码',timeout=0.4)

